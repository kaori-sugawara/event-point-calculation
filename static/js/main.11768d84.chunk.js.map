{"version":3,"sources":["serviceWorker.ts","components/InputNumber.tsx","components/labelText.tsx","components/SelectBox.tsx","components/Error.tsx","validation/schema.ts","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","InputNumber","label","name","control","min","max","unit","style","React","useState","displayValue","setDisplayValue","onChangeValue","useCallback","e","onChange","currentTarget","value","Number","undefined","className","flexGrow","render","type","verticalAlign","LabelText","fieldValue","paddingTop","SelectBox","items","target","map","item","key","Error","error","color","schema","z","star3","star4","star5","goal","liveScore","positive","message","int","eventLiveScore","bpPerPlay","defaultValues","App","useForm","mode","resolver","zodResolver","errors","watchStar3","useWatch","defaultValue","watchStar4","watchStar5","watchLiveScore","watchEventLiveScore","watchGoal","watchBpPerPlay","star3cardItems","useMemo","list","i","push","toString","totalPoint","eventCordBonus","scoreBonus","Math","round","getEventPoint","requiredBp","requiredPlay","requiredTime","time","hour","floor","requiredStone","display","justifyContent","href","rel","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.11768d84.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { Control, Controller } from 'react-hook-form';\n\ntype Props = {\n  label: string;\n  name: string;\n  control: Control<any>;\n  min?: number;\n  max?: number;\n  unit?: string;\n  style?: React.CSSProperties;\n}\n\nconst InputNumber = ({ label, name, control, min, max, unit, style }: Props) => {\n  const [displayValue, setDisplayValue] = React.useState(\"\");\n  const onChangeValue = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>, onChange: (...event: number[]) => void) => {\n      setDisplayValue(e.currentTarget.value);\n      // @ts-ignore\n      if (!e.currentTarget.value) return onChange(undefined);\n      return onChange(Number(e.currentTarget.value));\n    }, []);\n  return (\n    <div className=\"field is-horizontal\">\n      <div className=\"field-label is-normal\" style={{ flexGrow: 5 }}>\n        <label className=\"label\">{label}</label>\n      </div>\n      <div className=\"field-body\">\n        <div className=\"field\">\n          <div className=\"control\">\n            <Controller\n              name={name}\n              control={control}\n              render={({ value, onChange }) => (\n                <input\n                  value={value ?? displayValue}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => onChangeValue(e, onChange)}\n                  min={min}\n                  max={max}\n                  style={style ?? {}}\n                  className=\"input quarterWidth\"\n                  type=\"number\" />\n              )}\n            />\n            <span className=\"ml-2\" style={{ verticalAlign: \"bottom\" }}>\n              {unit ?? ''}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { InputNumber };","import React from 'react';\n\ntype Props = {\n  label: string;\n  value: number;\n  unit?: string;\n}\n\nconst LabelText = ({ label, value, unit }: Props) => {\n  const fieldValue = `${value ?? 0}${unit ?? ''}`;\n  return (\n    <div className=\"mt-5\">\n      <div className=\"field is-horizontal\">\n        <div className=\"field-label is-normal\" style={{ flexGrow: 5 }}>\n          <label className=\"label\">{label}</label>\n        </div>\n        <div className=\"field-body\">\n          <div className=\"field\" style={{ paddingTop: \".375rem\" }}>\n            <span>{fieldValue}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { LabelText };","import React from 'react';\nimport { Control, Controller } from 'react-hook-form';\n\ntype Props = {\n  label: string;\n  name: string;\n  control: Control<any>;\n  items: { label: string, value: string | number }[];\n  unit?: string;\n}\n\nconst SelectBox = ({ label, name, control, items, unit }: Props) => {\n  const onChangeValue = React.useCallback(\n    (e: React.ChangeEvent<HTMLSelectElement>, onChange: (...event: number[]) => void) => {\n      if (!e) return;\n      return onChange(Number(e.target.value));\n    }, []);\n  return (\n    <div className=\"mt-5\">\n      <div className=\"field is-horizontal\">\n        <div className=\"field-label is-normal\" style={{ flexGrow: 5 }}>\n          <label className=\"label\">{label}</label>\n        </div>\n        <div className=\"field-body\">\n          <div className=\"field\">\n            <div className=\"select\">\n              <Controller\n                name={name}\n                control={control}\n                render={({ value, onChange }) => (\n                  <select\n                    value={value}\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) => onChangeValue(e, onChange)}>\n                    {items.map(item => (\n                      <option key={item.value} value={item.value}>{item.label}{unit ?? \"\"}</option>\n                    ))}\n                  </select>\n                )}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport { SelectBox };","import React from 'react';\n\ntype Props = {\n  error: string;\n}\n\nconst Error = ({ error }: Props) => {\n  return (\n    <>\n      <div className=\"field is-horizontal\">\n        <div className=\"field-label is-normal\" style={{ flexGrow: 5 }} />\n        <div className=\"field-body\">\n          <div className=\"field\">\n            <span style={{ color: \"red\" }}>{error}</span>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport { Error };","import * as z from 'zod';\n\nexport type IFormInput = {\n  \"star3\": number;\n  \"star4\": number;\n  \"star5\": number;\n  \"goal\": number;\n  \"liveScore\": number;\n  \"eventLiveScore\": number;\n  \"bpPerPlay\": number;\n}\n\nexport const schema = z.object({\n  star3: z.number(),\n  star4: z.number(),\n  star5: z.number(),\n  goal: z.number(),\n  liveScore: z.number()\n    .positive({ message: \"0以上を入力してください\" })\n    .int({ message: \"整数で入力してください\" }),\n  eventLiveScore: z.number()\n    .positive({ message: \"0以上を入力してください\" })\n    .int({ message: \"整数で入力してください\" }),\n  bpPerPlay: z.number(),\n})\n\nexport const defaultValues = {\n  star3: 0,\n  star4: 0,\n  star5: 0,\n  goal: 350,\n  liveScore: 210,\n  eventLiveScore: 210,\n  bpPerPlay: 10,\n}","import React from 'react';\nimport { useForm, useWatch } from 'react-hook-form';\nimport { InputNumber } from './components/InputNumber'\nimport { LabelText } from './components/labelText';\nimport { SelectBox } from './components/SelectBox';\nimport { Error } from './components/Error';\nimport { IFormInput, schema, defaultValues } from './validation/schema';\nimport { zodResolver } from '@hookform/resolvers/zod';\n\nfunction App() {\n  const { errors, control } = useForm<IFormInput>({\n    mode: \"onChange\",\n    resolver: zodResolver(schema),\n    defaultValues\n  });\n  const watchStar3 = useWatch({ name: \"star3\", defaultValue: 0, control });\n  const watchStar4 = useWatch({ name: \"star4\", defaultValue: 0, control });\n  const watchStar5 = useWatch({ name: \"star5\", defaultValue: 0, control });\n  const watchLiveScore = useWatch({ name: \"liveScore\", defaultValue: 210, control });\n  const watchEventLiveScore = useWatch({ name: \"eventLiveScore\", defaultValue: 210, control });\n  const watchGoal = useWatch({ name: \"goal\", defaultValue: 350, control });\n  const watchBpPerPlay = useWatch({ name: \"bpPerPlay\", defaultValue: 10, control });\n\n  const star3cardItems = React.useMemo(() => {\n    const list = [];\n    for (let i = 0; i <= 10; i++) {\n      list.push({ label: i.toString(), value: i });\n    }\n    return list;\n  }, []);\n  const star4cardItems = [\n    { label: \"0\", value: 0 },\n    { label: \"1\", value: 5 },\n    { label: \"2\", value: 15 },\n    { label: \"3\", value: 25 },\n    { label: \"4\", value: 35 },\n    { label: \"5\", value: 50 },\n  ];\n  const star5cardItems = [\n    { label: \"0\", value: 0 },\n    { label: \"1\", value: 20 },\n    { label: \"2\", value: 50 },\n    { label: \"3\", value: 75 },\n    { label: \"4\", value: 100 },\n    { label: \"5\", value: 150 },\n  ];\n  const goalCard = [\n    { label: \"1\", value: 350 },\n    { label: \"2\", value: 750 },\n    { label: \"3\", value: 1100 },\n    { label: \"4\", value: 1150 },\n    { label: \"5\", value: 2200 },\n  ]\n  const useBp = [\n    { label: \"1\", value: 1 },\n    { label: \"2\", value: 2 },\n    { label: \"3\", value: 3 },\n    { label: \"6\", value: 6 },\n    { label: \"10\", value: 10 },\n  ];\n  const totalPoint = React.useMemo(() => {\n    const eventCordBonus = (watchStar3 + watchStar4 + watchStar5) / 100 + 1;\n    const scoreBonus = Math.round(watchLiveScore * 10000 / 5000);\n    const eventScoreBonus = Math.round(watchEventLiveScore * 10000 / 5000);\n    const getEventPoint = (10000 + eventScoreBonus) * eventCordBonus;\n    const getNomalPoint = (2000 + scoreBonus) * eventCordBonus;\n    return getNomalPoint + Math.round(getEventPoint / 10);\n  }, [watchStar3, watchStar4, watchStar5, watchLiveScore, watchEventLiveScore])\n\n  const requiredBp = React.useMemo(() => {\n    return Math.round(watchGoal * 10000 / totalPoint);\n  }, [watchGoal, totalPoint]);\n  const requiredPlay = React.useMemo(() => {\n    return Math.round(requiredBp / watchBpPerPlay);\n  }, [requiredBp, watchBpPerPlay]);\n  const requiredTime = React.useMemo(() => {\n    const time = requiredPlay * 3;\n    const hour = Math.floor(time / 60);\n    const min = time % 60;\n    return { hour, min };\n  }, [requiredPlay]);\n  const requiredStone = React.useMemo(() => {\n    return (requiredBp - 472) * 2;\n  }, [requiredBp]);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          あんスタ！！イベント計算シート\n        </p>\n      </header>\n      <main>\n        <div className=\"container\">\n          <div className=\"mt-5\">\n            <div className=\"field is-horizontal\">\n              <div className=\"field-label is-normal\" style={{ flexGrow: 5 }}>\n                <label className=\"label\">特攻カード枚数</label>\n              </div>\n              <div className=\"field-body\"></div>\n            </div>\n            <SelectBox\n              name=\"star3\"\n              label=\"星3\"\n              items={star3cardItems}\n              unit=\"枚\"\n              control={control}\n            />\n            {errors.star3 && (\n              <Error error={errors.star3.message ?? ''} />\n            )}\n            <SelectBox\n              name=\"star4\"\n              label=\"星4\"\n              items={star4cardItems}\n              unit=\"枚\"\n              control={control}\n            />\n            {errors.star4 && (\n              <Error error={errors.star4.message ?? ''} />\n            )}\n            <SelectBox\n              name=\"star5\"\n              label=\"星5\"\n              items={star5cardItems}\n              unit=\"枚\"\n              control={control}\n            />\n            {errors.star5 && (\n              <Error error={errors.star5.message ?? ''} />\n            )}\n          </div>\n\n          <div className=\"mt-5\">\n            <SelectBox\n              name=\"goal\"\n              label=\"目標枚数\"\n              items={goalCard}\n              unit=\"枚\"\n              control={control}\n            />\n            {errors.goal && (\n              <Error error={errors.goal.message ?? ''} />\n            )}\n          </div>\n\n          <div className=\"mt-5\">\n            <InputNumber\n              name=\"liveScore\"\n              label=\"通常ライブSCORE\"\n              min={0} unit=\"万pt\"\n              control={control} />\n            {errors.liveScore && (\n              <Error error={errors.liveScore.message ?? ''} />\n            )}\n          </div>\n\n          <div className=\"mt-5\">\n            <InputNumber\n              name=\"eventLiveScore\"\n              label=\"イベントライブSCORE\"\n              min={0}\n              unit=\"万pt\"\n              control={control} />\n            {errors.eventLiveScore && (\n              <Error error={errors.eventLiveScore.message ?? ''} />\n            )}\n          </div>\n\n          <div className=\"mt-5\">\n            <SelectBox\n              name=\"bpPerPlay\"\n              label=\"1play毎の消費BP\"\n              items={useBp}\n              control={control}\n            />\n            {errors.bpPerPlay && (\n              <Error error={errors.bpPerPlay.message ?? ''} />\n            )}\n          </div>\n\n          <LabelText label=\"必要ライブ回数\" value={requiredPlay ?? 0} unit=\"回\" />\n          <LabelText label=\"必要ダイヤ数\" value={requiredStone ?? 0} unit=\"個\" />\n          <div className=\"mt-5\">\n            <div className=\"field is-horizontal\">\n              <div className=\"field-label is-normal\" style={{ flexGrow: 5 }}>\n                <label className=\"label\">必要プレイ時間</label>\n              </div>\n              <div className=\"field-body\">\n                <div className=\"field\" style={{ paddingTop: \".375rem\" }}>\n                  <span>{requiredTime.hour ?? 0} 時間 {requiredTime.min} 分</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div\n            className=\"m-5\"\n            style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n          >\n            <div>\n              <a\n                className=\"Twitter-link\"\n                href=\"https://twitter.com/kikan_zyuuu/status/1315542522140131328?s=20\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                素晴らしい参照元ツイート\n              </a>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import './index.css';\nimport './App.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}